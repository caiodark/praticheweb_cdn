{"version":3,"sources":["webpack:///./src/app/modals/customer-modal/customer-modal.module.ts","webpack:///./src/app/modals/customer-modal/customer-modal.page.html","webpack:///./src/app/modals/customer-modal/customer-modal.page.scss","webpack:///./src/app/modals/customer-modal/customer-modal.page.ts","webpack:///./src/app/modals/organization-modal/organization-modal.module.ts","webpack:///./src/app/modals/organization-modal/organization-modal.page.html","webpack:///./src/app/modals/organization-modal/organization-modal.page.scss","webpack:///./src/app/modals/organization-modal/organization-modal.page.ts","webpack:///./src/app/models/customer.ts","webpack:///./src/app/services/customer.service.ts","webpack:///./src/app/services/organization.service.ts","webpack:///./src/app/services/policy.service.ts","webpack:///./src/app/services/setup-policies.service.ts"],"names":[],"mappings":"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","file":"default~policy-form-policy-form-module~proposal-form-proposal-form-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CustomerModalPage } from './customer-modal.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CustomerModalPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CustomerModalPage]\n})\nexport class CustomerModalPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Scelta opzione</ion-title>\\n    <ion-button slot=\\\"start\\\" (click)=\\\"DismissNoChoice()\\\">\\n      <ion-icon slot=\\\"icon-only\\\" name=\\\"close-circle-outline\\\"></ion-icon>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n  \\n<ion-content>\\n  <div class=\\\"ion-padding\\\">\\n    <div *ngIf=\\\"!customers || customers.length === 0\\\">\\n      Nessuna opzione presente.\\n    </div>\\n    <div *ngIf=\\\"baseCustomers && baseCustomers.length > 0\\\">\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" size-sm>\\n            <ion-item lines=\\\"none\\\">                \\n              <ion-searchbar placeholder=\\\"Cerca\\\" (ionChange)=\\\"searchChange($event)\\\"></ion-searchbar>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </div>\\n    <ion-grid *ngIf=\\\"customers && customers.length > 0\\\">\\n      <ion-row>\\n        <ion-col size=\\\"12\\\" size-sm>\\n          <ion-virtual-scroll [items]=\\\"customers\\\">\\n            <ion-item *virtualItem=\\\"let c\\\" lines=\\\"full\\\" approxItemHeight=\\\"57px\\\">\\n              <ion-button color=\\\"primary\\\" (click)=\\\"onItemClick(c)\\\" slot=\\\"start\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark-circle-outline\\\"></ion-icon>\\n              </ion-button>\\n              <ion-note slot=\\\"end\\\" class=\\\"ion-hide-sm-down\\\" *ngIf=\\\"c.address\\\">\\n                {{c.address.city}} {{c.address.province}} {{c.address.nation}}\\n              </ion-note>\\n              <ion-label text-wrap>{{c.firstName}}, {{c.lastName}}</ion-label>\\n            </ion-item>            \\n          </ion-virtual-scroll>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9jdXN0b21lci1tb2RhbC9jdXN0b21lci1tb2RhbC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Customer } from 'src/app/models/customer';\n\n@Component({\n  selector: 'app-customer-modal',\n  templateUrl: './customer-modal.page.html',\n  styleUrls: ['./customer-modal.page.scss'],\n})\nexport class CustomerModalPage implements OnInit {\n\n  constructor(private mc: ModalController) { }\n  baseCustomers: Customer[] = [];\n  @Input() customers: Customer[] = [];\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.customers = this.baseCustomers;\n  }\n\n  private filterData(query: string): Promise<Customer[]> {\n    const self = this;\n    return new Promise ((resolve, reject) => {\n      if (query && query !== '') {\n        try {\n          const regex = new RegExp(`${query}`, 'i');\n          resolve(self.baseCustomers.filter(obj => {\n            const srep = JSON.stringify(obj);\n            return regex.test(srep);\n          }));\n        } catch (e) {\n          resolve(self.baseCustomers);\n        }\n      } else {\n        resolve(this.baseCustomers);\n      }\n    });\n  }\n\n  async searchChange(event) {\n    this.customers = await this.filterData(event.target.value);\n  }\n\n  onItemClick(c: Customer) {\n    this.mc.dismiss(c);\n  }\n\n  DismissNoChoice() {\n    this.mc.dismiss();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrganizationModalPage } from './organization-modal.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrganizationModalPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [OrganizationModalPage]\n})\nexport class OrganizationModalPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Scelta opzione</ion-title>\\n    <ion-button slot=\\\"start\\\" (click)=\\\"DismissNoChoice()\\\">\\n      <ion-icon slot=\\\"icon-only\\\" name=\\\"close-circle-outline\\\"></ion-icon>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n  \\n<ion-content>\\n  <div class=\\\"ion-padding\\\">\\n    <div *ngIf=\\\"!Organizations || Organizations.length === 0\\\">\\n      Nessuna opzione presente.\\n    </div>\\n    <div *ngIf=\\\"BaseOrganizations && BaseOrganizations.length > 0\\\">\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" size-sm>\\n            <ion-item lines=\\\"none\\\">                \\n              <ion-searchbar placeholder=\\\"Cerca\\\" (ionChange)=\\\"searchChange($event)\\\"></ion-searchbar>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </div>\\n    <ion-grid *ngIf=\\\"Organizations && Organizations.length > 0\\\">\\n      <ion-row>\\n        <ion-col size=\\\"12\\\" size-sm>\\n          <ion-virtual-scroll [items]=\\\"Organizations\\\">\\n            <ion-item *virtualItem=\\\"let o\\\" lines=\\\"full\\\" approxItemHeight=\\\"57px\\\">\\n              <ion-button color=\\\"primary\\\" (click)=\\\"onItemClick(o)\\\" slot=\\\"start\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark-circle-outline\\\"></ion-icon>\\n              </ion-button>\\n              <ion-note slot=\\\"end\\\" class=\\\"ion-hide-sm-down\\\">\\n                {{o.address}}, {{o.city}}, {{o.province}}\\n              </ion-note>\\n              <ion-label text-wrap>{{o.name}}</ion-label>\\n            </ion-item>            \\n          </ion-virtual-scroll>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9vcmdhbml6YXRpb24tbW9kYWwvb3JnYW5pemF0aW9uLW1vZGFsLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Organization } from '../../models/organization';\n\n@Component({\n  selector: 'app-organization-modal',\n  templateUrl: './organization-modal.page.html',\n  styleUrls: ['./organization-modal.page.scss'],\n})\nexport class OrganizationModalPage implements OnInit {\n\n  constructor(private mc: ModalController) { }\n  BaseOrganizations: Organization[] = [];\n  @Input() Organizations: Array<Organization> = [];\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.Organizations = this.BaseOrganizations;\n  }\n\n  private filterData(query: string): Promise<Array<Organization>> {\n    const self = this;\n    return new Promise ((resolve, reject) => {\n      if (query && query !== '') {\n        try {\n          const regex = new RegExp(`${query}`, 'i');\n          resolve(self.BaseOrganizations.filter(obj => {\n            const srep = JSON.stringify(obj);\n            return regex.test(srep);\n          }));\n        } catch (e) {\n          resolve(self.BaseOrganizations);\n        }\n      } else {\n        resolve(this.BaseOrganizations);\n      }\n    });\n  }\n\n  async searchChange(event) {\n    this.Organizations = await this.filterData(event.target.value);\n  }\n\n  onItemClick(o: Organization) {\n    this.mc.dismiss(o);\n  }\n\n  DismissNoChoice() {\n    this.mc.dismiss();\n  }\n}\n","export class BirthData {\n  date?: string;\n  city?: string;\n  province?: string;\n  nation?: string;\n}\n\nexport class Address {\n  address?: string;\n  city?: string;\n  province?: string;\n  nation?: string;\n  zip?: string;\n}\n\nexport class Contacts {\n  email1?: string;\n  email2?: string;\n  fax?: string;\n  phone1?: string;\n  phone2?: string;\n}\n\nexport class Customer {\n  _id: string;\n  firstName: string;\n  lastName: string;\n  fiscalCode?: string;\n  vatNumber?: string;\n  birth?: BirthData;\n  idCard?: string;\n  passport?: string;\n  driveLicense?: string;\n  address?: Address;\n  options?: Map<string, string>;\n  notes?: string;\n  contacts?: Contacts;\n  company: string;\n  deleted: boolean;\n  token: string;\n  version: number;\n}\n","import { Injectable } from '@angular/core';\nimport { ServiceStatus } from '../models/service-status.enum';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Customer } from '../models/customer';\n\nexport class ServiceResponse {\n  status: ServiceStatus;\n  token: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  constructor(private http: HttpClient) { }\n\n  asyncGetCustomers(): Observable<Array<Customer>> {\n    return new Observable((observer) => {\n      let session = window.localStorage.getItem('_session');\n      if (! session) {\n        session = 'loggedout';\n      }\n      this.http.get(`http://localhost:8080/api/customers`, {\n        headers : {\n          's-t': session\n        },\n        observe: 'response'\n      }).subscribe((data: any) => {\n        const primitiveCstms = data.body;\n        const cstms: Array<Customer> = primitiveCstms.map((obj) => {\n          const k = new Customer();\n          k.firstName = obj.firstName;\n          k.lastName = obj.lastName;\n          k.fiscalCode = obj.fiscalCode;\n          k.vatNumber = obj.vatNumber;\n          k.birth = obj.birth;\n          k.idCard = obj.idCard;\n          k.passport = obj.passport;\n          k.driveLicense = obj.driveLicense;\n          k.address = obj.address;\n          // k.options = obj.options;\n          k.notes = obj.notes;\n          k.contacts = obj.contacts;\n          k.token = obj.token;\n          k.version = obj.version;\n          k.company = obj.company;\n          k.deleted = obj.deleted;\n          k._id = obj._id;\n          return k;\n        });\n        observer.next(cstms);\n        return {unsubscribe() {}};\n      }, error => {\n        console.log(error);\n        observer.error(error);\n        return {unsubscribe() {}};\n      });\n    });\n  }\n  asyncGetCustomer(token: string): Observable<Customer> {\n    return new Observable((observer) => {\n      let session = window.localStorage.getItem('_session');\n      if (! session) {\n        session = 'loggedout';\n      }\n      this.http.get(`http://localhost:8080/api/customers/${token}`, {\n        headers : {\n          's-t': session\n        },\n        observe: 'response'\n      }).subscribe((data: any) => {\n        const obj = data.body;\n        const k = new Customer();\n        k.firstName = obj.firstName;\n        k.lastName = obj.lastName;\n        k.fiscalCode = obj.fiscalCode;\n        k.vatNumber = obj.vatNumber;\n        k.birth = obj.birth;\n        k.idCard = obj.idCard;\n        k.passport = obj.passport;\n        k.driveLicense = obj.driveLicense;\n        k.address = obj.address;\n        k.options = new Map<string, string>();\n        if (JSON.stringify(obj.options) !== JSON.stringify({})) {\n          Object.keys(obj.options).forEach(key => {\n            k.options.set(key, obj.options[key]);\n          });\n        }\n        k.notes = obj.notes;\n        k.contacts = obj.contacts;\n        k.token = obj.token;\n        k.version = obj.version;\n        k.company = obj.company;\n        k.deleted = obj.deleted;\n        k._id = obj._id;\n        console.log(k);\n        observer.next(k);\n        return {unsubscribe() {}};\n      }, error => {\n        console.log(error);\n        observer.error(error);\n        return {unsubscribe() {}};\n      });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Organization } from '../models/organization';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrganizationService {\n\n  constructor(private hc: HttpClient) { }\n\n  private url = 'http://localhost:8080/api/world';\n\n  getOrganizationList(kind: string): Observable<Organization[]> {\n    let session = window.localStorage.getItem('_session');\n    if (! session) {\n      session = 'loggedout';\n    }\n\n    return this.hc.get<Organization[]>(`${this.url}/${kind}`, {\n      headers : {\n        's-t': session\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Policy } from '../models/policy';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PolicyService {\n  baseUrl = 'http://localhost:8080/api/policies';\n  constructor(private hc: HttpClient) { }\n\n  getList(kind?: string): Observable<Policy[]> {\n    const mayKind = kind ? kind : 'policy';\n    let session = window.localStorage.getItem('_session');\n    if (! session) {\n      session = 'loggedout';\n    }\n    return this.hc.get<Policy[]>(`${this.baseUrl}?kind=${mayKind}`, {\n      headers : {\n        's-t': session\n      }\n    });\n  }\n\n  single(id: string): Observable<Policy> {\n    let session = window.localStorage.getItem('_session');\n    if (! session) {\n      session = 'loggedou';\n    }\n    return this.hc.get<Policy>(`${this.baseUrl}/${id}`, {\n      headers: {\n        's-t': session\n      }\n    });\n  }\n\n  saveNew(policy: Policy): Observable<Policy> {\n    let session = window.localStorage.getItem('_session');\n    if (! session) {\n      session = 'loggedou';\n    }\n    return this.hc.post<Policy>(this.baseUrl, policy, {\n      headers: {\n        's-t': session\n      }\n    });\n  }\n\n  update(policy: Policy): Observable<Policy> {\n    let session = window.localStorage.getItem('_session');\n    if (! session) {\n      session = 'loggedou';\n    }\n    return this.hc.put<Policy>(`${this.baseUrl}/${policy.token}`, policy, {\n      headers: {\n        's-t': session\n      }\n    });\n  }\n\n  delete(id: string): Observable<boolean> {\n    return new Observable((observer) => {\n      let session = window.localStorage.getItem('_session');\n      if (! session) {\n        session = 'loggedout';\n      }\n      this.hc.delete(`${this.baseUrl}/${id}`, {\n        headers: {\n          's-t': session\n        },\n        observe: 'response',\n        responseType: 'text',\n      }).subscribe((res: HttpResponse<any>) => {\n        observer.next(res.status === 200);\n      }, error => {\n        observer.error(error);\n      });\n    });\n  }\n\n  toPolicy(token: string): Observable<Policy> {\n    let session = window.localStorage.getItem('_session');\n    if (! session) {\n      session = 'loggedout';\n    }\n    return this.hc.post<Policy>(`${this.baseUrl}/topolicy/${token}`, {}, {\n      headers: {\n        's-t': session\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { SetupKind } from '../models/setup-kind';\nimport { SetupOption } from '../models/setup-option';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SetupPoliciesService {\n\n  private baseUrl = 'http://localhost:8080/api/setuppolicies/';\n  constructor(private hc: HttpClient) { }\n\n  getKinds(): Observable<SetupKind[]> {\n    let session = window.localStorage.getItem('_session');\n    if (! session) {\n      session = 'loggedout';\n    }\n    return this.hc.get<SetupKind[]>(`${this.baseUrl}kinds`, {\n      headers : {\n        's-t': session\n      }\n    });\n  }\n  getOptions(idKind: string): Observable<SetupOption[]> {\n    let session = window.localStorage.getItem('_session');\n    if (! session) {\n      session = 'loggedout';\n    }\n    return this.hc.get<SetupOption[]>(`${this.baseUrl}options/${idKind}`, {\n      headers : {\n        's-t': session\n      }\n    });\n  }\n}\n"],"sourceRoot":""}