{"version":3,"sources":["webpack:///./src/app/modals/organization-modal/organization-modal.module.ts","webpack:///./src/app/modals/organization-modal/organization-modal.page.html","webpack:///./src/app/modals/organization-modal/organization-modal.page.scss","webpack:///./src/app/modals/organization-modal/organization-modal.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEqB;AAElE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8EAAqB;KACjC;CACF,CAAC;AAWF;IAAA;IAA0C,CAAC;IAA9B,2BAA2B;QATvC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,8EAAqB,CAAC;SACtC,CAAC;OACW,2BAA2B,CAAG;IAAD,kCAAC;CAAA;AAAH;;;;;;;;;;;;ACzBxC,y4CAAy4C,WAAW,IAAI,QAAQ,IAAI,YAAY,kEAAkE,QAAQ,sK;;;;;;;;;;;ACA1/C,+DAA+D,+K;;;;;;;;;;;;;;;;;;ACAN;AACR;AAQjD;IAEE,+BAAoB,EAAmB;QAAnB,OAAE,GAAF,EAAE,CAAiB;QACvC,sBAAiB,GAAmB,EAAE,CAAC;QAC9B,kBAAa,GAAwB,EAAE,CAAC;IAFN,CAAC;IAI5C,wCAAQ,GAAR;IACA,CAAC;IAED,gDAAgB,GAAhB;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC;IAC9C,CAAC;IAEO,0CAAU,GAAlB,UAAmB,KAAa;QAAhC,iBAiBC;QAhBC,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,OAAO,IAAI,OAAO,CAAE,UAAC,OAAO,EAAE,MAAM;YAClC,IAAI,KAAK,IAAI,KAAK,KAAK,EAAE,EAAE;gBACzB,IAAI;oBACF,IAAM,OAAK,GAAG,IAAI,MAAM,CAAC,KAAG,KAAO,EAAE,GAAG,CAAC,CAAC;oBAC1C,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,aAAG;wBACvC,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;wBACjC,OAAO,OAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC1B,CAAC,CAAC,CAAC,CAAC;iBACL;gBAAC,OAAO,CAAC,EAAE;oBACV,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;iBACjC;aACF;iBAAM;gBACL,OAAO,CAAC,KAAI,CAAC,iBAAiB,CAAC,CAAC;aACjC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,4CAAY,GAAlB,UAAmB,KAAK;;;;;;wBACtB,SAAI;wBAAiB,qBAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;;wBAA9D,GAAK,aAAa,GAAG,SAAyC,CAAC;;;;;KAChE;IAED,2CAAW,GAAX,UAAY,CAAe;QACzB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;IAED,+CAAe,GAAf;QACE,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;IAtCQ;QAAR,2DAAK,EAAE;wEAAgB,KAAK;gEAAoB;IAJtC,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,uIAA6C;;SAE9C,CAAC;+EAGwB,8DAAe;OAF5B,qBAAqB,CA2CjC;IAAD,4BAAC;CAAA;AA3CiC","file":"modals-organization-modal-organization-modal-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrganizationModalPage } from './organization-modal.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrganizationModalPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [OrganizationModalPage]\n})\nexport class OrganizationModalPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Scelta opzione</ion-title>\\n    <ion-button slot=\\\"start\\\" (click)=\\\"DismissNoChoice()\\\">\\n      <ion-icon slot=\\\"icon-only\\\" name=\\\"close-circle-outline\\\"></ion-icon>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n  \\n<ion-content>\\n  <div class=\\\"ion-padding\\\">\\n    <div *ngIf=\\\"!Organizations || Organizations.length === 0\\\">\\n      Nessuna opzione presente.\\n    </div>\\n    <div *ngIf=\\\"BaseOrganizations && BaseOrganizations.length > 0\\\">\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" size-sm>\\n            <ion-item lines=\\\"none\\\">                \\n              <ion-searchbar placeholder=\\\"Cerca\\\" (ionChange)=\\\"searchChange($event)\\\"></ion-searchbar>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </div>\\n    <ion-grid *ngIf=\\\"Organizations && Organizations.length > 0\\\">\\n      <ion-row>\\n        <ion-col size=\\\"12\\\" size-sm>\\n          <ion-virtual-scroll [items]=\\\"Organizations\\\">\\n            <ion-item *virtualItem=\\\"let o\\\" lines=\\\"full\\\" approxItemHeight=\\\"57px\\\">\\n              <ion-button color=\\\"primary\\\" (click)=\\\"onItemClick(o)\\\" slot=\\\"start\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark-circle-outline\\\"></ion-icon>\\n              </ion-button>\\n              <ion-note slot=\\\"end\\\" class=\\\"ion-hide-sm-down\\\">\\n                {{o.address}}, {{o.city}}, {{o.province}}\\n              </ion-note>\\n              <ion-label text-wrap>{{o.name}}</ion-label>\\n            </ion-item>            \\n          </ion-virtual-scroll>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9vcmdhbml6YXRpb24tbW9kYWwvb3JnYW5pemF0aW9uLW1vZGFsLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Organization } from '../../models/organization';\n\n@Component({\n  selector: 'app-organization-modal',\n  templateUrl: './organization-modal.page.html',\n  styleUrls: ['./organization-modal.page.scss'],\n})\nexport class OrganizationModalPage implements OnInit {\n\n  constructor(private mc: ModalController) { }\n  BaseOrganizations: Organization[] = [];\n  @Input() Organizations: Array<Organization> = [];\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.Organizations = this.BaseOrganizations;\n  }\n\n  private filterData(query: string): Promise<Array<Organization>> {\n    const self = this;\n    return new Promise ((resolve, reject) => {\n      if (query && query !== '') {\n        try {\n          const regex = new RegExp(`${query}`, 'i');\n          resolve(self.BaseOrganizations.filter(obj => {\n            const srep = JSON.stringify(obj);\n            return regex.test(srep);\n          }));\n        } catch (e) {\n          resolve(self.BaseOrganizations);\n        }\n      } else {\n        resolve(this.BaseOrganizations);\n      }\n    });\n  }\n\n  async searchChange(event) {\n    this.Organizations = await this.filterData(event.target.value);\n  }\n\n  onItemClick(o: Organization) {\n    this.mc.dismiss(o);\n  }\n\n  DismissNoChoice() {\n    this.mc.dismiss();\n  }\n}\n"],"sourceRoot":""}