{"version":3,"sources":["webpack:///./src/app/modals/customer-modal/customer-modal.module.ts","webpack:///./src/app/modals/customer-modal/customer-modal.page.html","webpack:///./src/app/modals/customer-modal/customer-modal.page.scss","webpack:///./src/app/modals/customer-modal/customer-modal.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEa;AAE1D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sEAAiB;KAC7B;CACF,CAAC;AAWF;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QATnC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,sEAAiB,CAAC;SAClC,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBpC,i4CAAi4C,gBAAgB,GAAG,oBAAoB,GAAG,kBAAkB,kEAAkE,aAAa,IAAI,YAAY,sK;;;;;;;;;;;ACA5hD,+DAA+D,uK;;;;;;;;;;;;;;;;;;ACAN;AACR;AAQjD;IAEE,2BAAoB,EAAmB;QAAnB,OAAE,GAAF,EAAE,CAAiB;QACvC,kBAAa,GAAe,EAAE,CAAC;QACtB,cAAS,GAAe,EAAE,CAAC;IAFO,CAAC;IAI5C,oCAAQ,GAAR;IACA,CAAC;IAED,4CAAgB,GAAhB;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;IACtC,CAAC;IAEO,sCAAU,GAAlB,UAAmB,KAAa;QAAhC,iBAiBC;QAhBC,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,OAAO,IAAI,OAAO,CAAE,UAAC,OAAO,EAAE,MAAM;YAClC,IAAI,KAAK,IAAI,KAAK,KAAK,EAAE,EAAE;gBACzB,IAAI;oBACF,IAAM,OAAK,GAAG,IAAI,MAAM,CAAC,KAAG,KAAO,EAAE,GAAG,CAAC,CAAC;oBAC1C,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,aAAG;wBACnC,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;wBACjC,OAAO,OAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC1B,CAAC,CAAC,CAAC,CAAC;iBACL;gBAAC,OAAO,CAAC,EAAE;oBACV,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;iBAC7B;aACF;iBAAM;gBACL,OAAO,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,wCAAY,GAAlB,UAAmB,KAAK;;;;;;wBACtB,SAAI;wBAAa,qBAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;;wBAA1D,GAAK,SAAS,GAAG,SAAyC,CAAC;;;;;KAC5D;IAED,uCAAW,GAAX,UAAY,CAAW;QACrB,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;IAED,2CAAe,GAAf;QACE,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;IACpB,CAAC;IAtCQ;QAAR,2DAAK,EAAE;;wDAA4B;IAJzB,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,2HAAyC;;SAE1C,CAAC;+EAGwB,8DAAe;OAF5B,iBAAiB,CA4C7B;IAAD,wBAAC;CAAA;AA5C6B","file":"modals-customer-modal-customer-modal-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CustomerModalPage } from './customer-modal.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CustomerModalPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CustomerModalPage]\n})\nexport class CustomerModalPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Scelta opzione</ion-title>\\n    <ion-button slot=\\\"start\\\" (click)=\\\"DismissNoChoice()\\\">\\n      <ion-icon slot=\\\"icon-only\\\" name=\\\"close-circle-outline\\\"></ion-icon>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n  \\n<ion-content>\\n  <div class=\\\"ion-padding\\\">\\n    <div *ngIf=\\\"!customers || customers.length === 0\\\">\\n      Nessuna opzione presente.\\n    </div>\\n    <div *ngIf=\\\"baseCustomers && baseCustomers.length > 0\\\">\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" size-sm>\\n            <ion-item lines=\\\"none\\\">                \\n              <ion-searchbar placeholder=\\\"Cerca\\\" (ionChange)=\\\"searchChange($event)\\\"></ion-searchbar>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </div>\\n    <ion-grid *ngIf=\\\"customers && customers.length > 0\\\">\\n      <ion-row>\\n        <ion-col size=\\\"12\\\" size-sm>\\n          <ion-virtual-scroll [items]=\\\"customers\\\">\\n            <ion-item *virtualItem=\\\"let c\\\" lines=\\\"full\\\" approxItemHeight=\\\"57px\\\">\\n              <ion-button color=\\\"primary\\\" (click)=\\\"onItemClick(c)\\\" slot=\\\"start\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark-circle-outline\\\"></ion-icon>\\n              </ion-button>\\n              <ion-note slot=\\\"end\\\" class=\\\"ion-hide-sm-down\\\" *ngIf=\\\"c.address\\\">\\n                {{c.address.city}} {{c.address.province}} {{c.address.nation}}\\n              </ion-note>\\n              <ion-label text-wrap>{{c.firstName}}, {{c.lastName}}</ion-label>\\n            </ion-item>            \\n          </ion-virtual-scroll>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9jdXN0b21lci1tb2RhbC9jdXN0b21lci1tb2RhbC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Customer } from 'src/app/models/customer';\n\n@Component({\n  selector: 'app-customer-modal',\n  templateUrl: './customer-modal.page.html',\n  styleUrls: ['./customer-modal.page.scss'],\n})\nexport class CustomerModalPage implements OnInit {\n\n  constructor(private mc: ModalController) { }\n  baseCustomers: Customer[] = [];\n  @Input() customers: Customer[] = [];\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.customers = this.baseCustomers;\n  }\n\n  private filterData(query: string): Promise<Customer[]> {\n    const self = this;\n    return new Promise ((resolve, reject) => {\n      if (query && query !== '') {\n        try {\n          const regex = new RegExp(`${query}`, 'i');\n          resolve(self.baseCustomers.filter(obj => {\n            const srep = JSON.stringify(obj);\n            return regex.test(srep);\n          }));\n        } catch (e) {\n          resolve(self.baseCustomers);\n        }\n      } else {\n        resolve(this.baseCustomers);\n      }\n    });\n  }\n\n  async searchChange(event) {\n    this.customers = await this.filterData(event.target.value);\n  }\n\n  onItemClick(c: Customer) {\n    this.mc.dismiss(c);\n  }\n\n  DismissNoChoice() {\n    this.mc.dismiss();\n  }\n\n}\n"],"sourceRoot":""}