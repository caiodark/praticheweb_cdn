{"version":3,"sources":["webpack:///./src/app/models/user-model.ts","webpack:///./src/app/register-user.service.ts","webpack:///./src/app/register/register.module.ts","webpack:///./src/app/register/register.page.html","webpack:///./src/app/register/register.page.scss","webpack:///./src/app/register/register.page.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["export class UserModel {\n  firstName: string;\n  lastName: string;\n  email: string;\n  role?: string;\n}\n","import { Injectable } from '@angular/core';\nimport { UserModel } from './models/user-model';\nimport { ServiceStatus } from './models/service-status.enum';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterUserService {\n\n  constructor(private _http: HttpClient) { }\n\n  asyncDo(user: UserModel): Observable<ServiceStatus> {\n    return new Observable((observer) => {\n      this._http.post('/api/users', user).subscribe((data: HttpResponse<Object>) => {\n        if (data.status === 200) {\n          const ok = ServiceStatus.OK;\n          observer.next(ok);\n        } else {\n          const ops = ServiceStatus.FAILED;\n          observer.next(ops);\n        }\n        return {unsubscribe() {  }};\n      }, error => {\n        const ops = ServiceStatus.FAILED;\n        observer.next(ops);\n        return {unsubscribe() {  }};\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Pratiche Web</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n  <form [formGroup]=\\\"registerForm\\\">\\n    <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <ion-title>Registrati</ion-title>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n        <ion-col size=\\\"12\\\" size-sm>\\n          <ion-item>\\n            <ion-label>Nome: </ion-label>\\n            <ion-input placeholder=\\\"Nome\\\" formControlName=\\\"firstName\\\"></ion-input>\\n          </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"12\\\" size-sm>\\n          <ion-item>\\n            <ion-label>Cognome:</ion-label>\\n            <ion-input placeholder=\\\"Cognome\\\" formControlName=\\\"lastName\\\"></ion-input>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\" size-sm offset-md=\\\"6\\\" pull-md=\\\"6\\\">\\n          <ion-item>\\n            <ion-label>E-mail:</ion-label>\\n            <ion-input placeholder=\\\"E-mail\\\" type=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <div>\\n            <ion-button color=\\\"primary\\\" [disabled]=\\\"!registerForm.valid\\\" (click)=\\\"onSaveClick()\\\">Salva</ion-button>\\n            <ion-button color=\\\"danger\\\" (click)=\\\"onCancelClick()\\\">Annulla</ion-button>      \\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>    \\n  </form>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { RegisterUserService } from '../register-user.service';\nimport { UserModel} from '../models/user-model';\nimport { ServiceStatus} from '../models/service-status.enum';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit, OnDestroy {\n\n  registerForm: FormGroup;\n  registrationService: RegisterUserService;\n  registrationObservable: Subscription;\n  r: Router;\n\n  constructor(private fb: FormBuilder, private regService: RegisterUserService, private _router: Router) {\n    this.registerForm = fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', Validators.compose([Validators.email, Validators.required])]\n    });\n    this.registrationService = regService;\n    this.r = _router;\n    console.log(this.r);\n  }\n\n  onCancelClick() {\n    this.registerForm.patchValue({\n      firstName: '',\n      lastName: '',\n      email: ''\n    });\n  }\n  onSaveClick() {\n    const user = new UserModel();\n    const values = this.registerForm.value;\n    user.email = values.email;\n    user.firstName = values.firstName;\n    user.lastName = values.lastName;\n    const router = this.r;\n    this.registrationObservable = this.registrationService.asyncDo(user).subscribe({\n      next(status) {console.log(status); router.navigate(['/email-sent']); },\n      error(msg) {console.log(`Error saving user: ${msg || ''}`); }\n    });\n  }\n  ngOnInit() {\n  }\n  ngOnDestroy() {\n    if (this.registrationObservable) {\n      this.registrationObservable.unsubscribe();\n      console.log('entrato');\n    }\n  }\n\n}\n"],"sourceRoot":""}