{"version":3,"sources":["webpack:///./src/app/models/token-model.ts","webpack:///./src/app/models/user-set-pass.ts","webpack:///./src/app/services/setpass.service.ts","webpack:///./src/app/setpass/setpass.module.ts","webpack:///./src/app/setpass/setpass.page.html","webpack:///./src/app/setpass/setpass.page.scss","webpack:///./src/app/setpass/setpass.page.ts"],"names":[],"mappings":"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","file":"setpass-setpass-module.js","sourcesContent":["export class TokenModel {\n  _id: String;\n  company: String;\n  email: String;\n  what: String;\n  deleted: Boolean;\n  token: String;\n}\n","export class UserSetPass {\n  email: String;\n  pass: String;\n}\n","import { Injectable } from '@angular/core';\nimport { UserSetPass } from '../models/user-set-pass';\nimport { TokenModel } from '../models/token-model';\nimport { ServiceStatus } from '../models/service-status.enum';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SetpassService {\n\n  constructor(private _http: HttpClient) { }\n\n  asyncGetToken(token: String): Observable<TokenModel> {\n    return new Observable((observer) => {\n      const headers = new HttpHeaders();\n      headers.append('Access-Control-Allow-Origin', '*');\n      this._http.get(`/api/token/${token}`, {headers}).subscribe((data: any) => {\n        const ris = new TokenModel();\n        ris._id = data._id;\n        ris.company = data.company;\n        ris.deleted = data.deleted;\n        ris.email =  data.email;\n        ris.token = data.token;\n        ris.what = data.what;\n        observer.next(ris);\n        return {unsubscribe() {}};\n      }, error => {\n        console.log(error);\n        observer.error(error);\n        return {unsubscribe() {  }};\n      });\n    });\n  }\n\n  asyncDo(user: UserSetPass, token: TokenModel): Observable<ServiceStatus> {\n    return new Observable((observer) => {\n      this._http.put(`/api/users/${user.email}`, user).subscribe((data: HttpResponse<Object>) => {\n        this._http.delete(`/api/token/${token.token}`).subscribe((ris: HttpResponse<Object>) => {\n          const ok = ServiceStatus.OK;\n          observer.next(ok);\n        }, error => {\n          console.log(error);\n          const ops = ServiceStatus.FAILED;\n          observer.error(ops);\n          return {unsubscribe() {  }};\n        });\n        return {unsubscribe() {  }};\n      }, error => {\n        console.log(error);\n        const ops = ServiceStatus.FAILED;\n        observer.error(ops);\n        return {unsubscribe() {  }};\n      });\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SetpassPage } from './setpass.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SetpassPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SetpassPage]\n})\nexport class SetpassPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Pratiche Web</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n  <form [formGroup]=\\\"setpassForm\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\" size-sm>\\n            <ion-item>\\n              <ion-label>Password: </ion-label>\\n              <ion-input placeholder=\\\"Password\\\" formControlName=\\\"pass\\\" type=\\\"password\\\"></ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\" size-sm>\\n            <ion-item>\\n              <ion-label>Ripeti password:</ion-label>\\n              <ion-input placeholder=\\\"Password\\\" formControlName=\\\"repeatPass\\\" type=\\\"password\\\"></ion-input>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <div>\\n                <ion-button color=\\\"primary\\\" [disabled]=\\\"!setpassForm.valid\\\" (click)=\\\"onSaveClick()\\\">Salva</ion-button>\\n                <ion-button color=\\\"danger\\\" (click)=\\\"onCancelClick()\\\">Annulla</ion-button>      \\n              </div>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n  </form>\\n\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHBhc3Mvc2V0cGFzcy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { switchMap} from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { UserSetPass } from '../models/user-set-pass';\nimport { SetpassService } from '../services/setpass.service';\nimport { TokenModel } from '../models/token-model';\n\n@Component({\n  selector: 'app-setpass',\n  templateUrl: './setpass.page.html',\n  styleUrls: ['./setpass.page.scss'],\n})\n\nexport class SetpassPage implements OnInit, OnDestroy {\n  setpassForm: FormGroup;\n  private token$: Subscription;\n  private setpassRun$: Subscription;\n  private getToken$: Subscription;\n  private tokenParam: String;\n  private token: TokenModel;\n\n  constructor(private _fb: FormBuilder,\n    private _r: Router,\n    private _route: ActivatedRoute,\n    private _service: SetpassService) {\n    this.setpassForm = _fb.group({\n      pass: ['', Validators.required],\n      repeatPass: ['', Validators.compose([Validators.required, this.genValidateRepeatPass()])],\n    });\n  }\n\n  private genValidateRepeatPass() {\n    const self = this;\n    return (c: FormControl) => {\n      let isEqual = false;\n      if (self && self.setpassForm && self.setpassForm.get('pass')) {\n        isEqual = self.setpassForm.get('pass').value === c.value;\n      }\n      return isEqual ? null : {\n        validateRepeatPass: {\n          valid: false\n        }\n      };\n    };\n  }\n\n  ngOnInit() {\n    this.token$ = this._route.params.subscribe(params => {\n      this.tokenParam = params['token'];\n        const self = this;\n        this.getToken$ = this._service.asyncGetToken(this.tokenParam).subscribe({\n          next(tkn) {\n            self.token = tkn;\n            if (tkn.what !== 'SETPASS') {\n              console.log(self._r);\n              self._r.navigate(['/not-found']);\n            }\n          },\n          error(msg) {\n            console.log(`Error getting token: ${msg || ''}`);\n            self._r.navigate(['/not-found']);\n          }\n        });\n    });\n  }\n\n  ngOnDestroy() {\n    this.token$.unsubscribe();\n    this.getToken$.unsubscribe();\n    if (this.setpassRun$) {\n      this.setpassRun$.unsubscribe();\n    }\n  }\n\n  onCancelClick() {\n    this.setpassForm.patchValue({\n      pass: '',\n      repeatPass: ''\n    });\n  }\n\n  onSaveClick() {\n    if (this.setpassForm.valid) {\n      const record = new UserSetPass();\n      record.email = this.token.email;\n      record.pass = this.setpassForm.get('pass').value;\n      const self = this;\n      this.setpassRun$ = this._service.asyncDo(record, this.token).subscribe({\n        next(status) {console.log(status); self._r.navigate(['/pass-changed']); },\n        error(msg) {console.log(`Error saving user: ${msg || ''}`); }\n      });\n    }\n  }\n}\n"],"sourceRoot":""}