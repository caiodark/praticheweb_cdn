{"version":3,"sources":["webpack:///./src/app/diary/diary.module.ts","webpack:///./src/app/diary/diary.page.html","webpack:///./src/app/diary/diary.page.scss","webpack:///./src/app/diary/diary.page.ts","webpack:///./src/app/services/diary.service.ts"],"names":[],"mappings":"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","file":"default~casualty-form-casualty-form-module~src-app-diary-diary-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DiaryPage } from './diary.page';\nimport { NiceDateModule } from 'src/app/pipes/nice-date.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DiaryPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NiceDateModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [DiaryPage]\n})\nexport class DiaryPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button icon-only menuToggle=\\\"start\\\">\\n        <ion-icon name=\\\"menu\\\"></ion-icon>\\n      </ion-menu-button>          \\n    </ion-buttons>\\n    <ion-title>\\n      Pratiche Web\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"ion-padding\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <p>\\n            <a (click)=\\\"onListaClick()\\\" [routerLink]=\\\"\\\">{{listLabel}}</a> | <a (click)=\\\"onBackClick()\\\" [routerLink]=\\\"\\\">{{backLabel}}</a> | diario\\n          </p>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col>\\n          <h1>Diario</h1>\\n        </ion-col>\\n      </ion-row>\\n      <form [formGroup]=\\\"diaryForm\\\">\\n        <ion-row>\\n          <ion-col size=\\\"6\\\" size-md>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>Note:</ion-label>\\n              <ion-textarea placeholder=\\\"Descrizione evento\\\" formControlName=\\\"notes\\\"></ion-textarea>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"6\\\" size-md>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>Quando:</ion-label>\\n              <ion-datetime\\n                placeholder = \\\"Data evento\\\"\\n                display-format=\\\"DD/MM/YYYY\\\" \\n                picker-format=\\\"DD/MMMM/YYYY\\\" \\n                formControlName=\\\"when\\\"\\n                month-names=\\\"gennaio, febbraio, marzo, aprile, maggio, giugno, luglio, agosto, settembre, ottobre, novembre, dicembre\\\"\\n                cancel-text=\\\"Annulla\\\"\\n                done-text=\\\"Ok\\\">\\n              </ion-datetime>\\n              </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <div>\\n              <ion-button color=\\\"primary\\\" [disabled]=\\\"!diaryForm.valid\\\" (click)=\\\"saveNew()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"save\\\"></ion-icon>\\n              </ion-button>\\n              <ion-button color=\\\"tertiary\\\" (click)=\\\"reset()\\\">\\n                  <ion-icon slot=\\\"icon-only\\\" name=\\\"undo\\\"></ion-icon>\\n                </ion-button>\\n              </div>\\n          </ion-col>\\n        </ion-row>\\n      </form>\\n      <ion-row>\\n        <ion-col *ngFor=\\\"let entry of entries\\\" size=\\\"12\\\" size-md=\\\"6\\\">\\n          <ion-card>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>{{entry.when | niceDate:'DD/MM/YYYY HH:mm'}}</ion-label>\\n              <ion-button color=\\\"primary\\\" slot=\\\"start\\\" (click)=\\\"putEntryOnEdit(entry)\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"compass\\\"></ion-icon>\\n              </ion-button>\\n              <ion-button color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"onDeleteEntryClick(entry)\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n              </ion-button>\\n            </ion-item>\\n            <ion-card-content>\\n              <div *ngIf=\\\"!(current && current._id === entry._id)\\\">\\n                {{entry.notes}}\\n              </div>\\n              <form [formGroup]=\\\"updForm\\\" *ngIf=\\\"current && current._id === entry._id\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Note:</ion-label>\\n                  <ion-textarea placeholder=\\\"Descrizione evento\\\" formControlName=\\\"notes\\\"></ion-textarea>\\n                </ion-item>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label>Quando:</ion-label>\\n                  <ion-datetime\\n                    placeholder = \\\"Data evento\\\"\\n                    display-format=\\\"DD/MM/YYYY\\\" \\n                    picker-format=\\\"DD/MMMM/YYYY\\\" \\n                    formControlName=\\\"when\\\"\\n                    month-names=\\\"gennaio, febbraio, marzo, aprile, maggio, giugno, luglio, agosto, settembre, ottobre, novembre, dicembre\\\"\\n                    cancel-text=\\\"Annulla\\\"\\n                    done-text=\\\"Ok\\\">\\n                  </ion-datetime>\\n                </ion-item>\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-button color=\\\"primary\\\" (click)=\\\"updateEntry(entry)\\\">\\n                    <ion-icon slot=\\\"icon-only\\\" name=\\\"save\\\"></ion-icon>\\n                  </ion-button>\\n                  <ion-button color=\\\"tertiary\\\" (click)=\\\"resetCurrent()\\\">\\n                    <ion-icon slot=\\\"icon-only\\\" name=\\\"undo\\\"></ion-icon>\\n                  </ion-button>\\n                </ion-item>\\n              </form>\\n            </ion-card-content>\\n          </ion-card>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RpYXJ5L2RpYXJ5LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ChangeDetectorRef, Input } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { DiaryEntry } from 'src/app/models/diary-entry';\nimport { DiaryService } from 'src/app/services/diary.service';\nimport { ToastController, AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-diary',\n  templateUrl: './diary.page.html',\n  styleUrls: ['./diary.page.scss'],\n})\nexport class DiaryPage implements OnInit {\n  listLabel = 'Infortuni';\n  backLabel = 'Infortunio';\n  route$: Subscription;\n  token = '';\n  entries: DiaryEntry[] = [];\n  diaryForm: FormGroup;\n  updForm: FormGroup;\n  @Input() current: DiaryEntry;\n\n  constructor(\n    private cd: ChangeDetectorRef,\n    private router: Router,\n    private ar: ActivatedRoute,\n    private ds: DiaryService,\n    private fb: FormBuilder,\n    private tc: ToastController,\n    private ac: AlertController\n  ) {\n    this.diaryForm = fb.group({\n      notes: ['', Validators.required],\n      when: ['', Validators.required],\n    });\n    this.updForm = fb.group({\n      notes: ['', Validators.required],\n      when: ['', Validators.required],\n    });\n  }\n\n  private getToken(): Promise<string> {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      self.route$ = self.ar.params.subscribe((params) => {\n        resolve(params.token);\n      });\n    });\n  }\n\n  private getList(token: string): Promise<DiaryEntry[]> {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      self.ds.getList(token).subscribe({\n        next(list) {\n          resolve(list);\n        },\n        error(err) {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  async ionViewWillEnter() {\n    try {\n      this.token = await this.getToken();\n      this.backLabel = 'Infortunio';\n      this.listLabel = 'Lista infortuni';\n      this.entries = await this.getList(this.token);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  onListaClick() {\n    this.router.navigate(['home']);\n  }\n\n  onBackClick() {\n    this.router.navigate(['casualty', this.token]);\n  }\n\n  reset() {\n    this.diaryForm.patchValue({\n      notes: '',\n      when: '',\n    });\n  }\n\n  private async showMessage(message: string) {\n    const toast = await this.tc.create({\n      message,\n      duration: 2000\n    });\n    await toast.present();\n  }\n\n  private save(toSave: DiaryEntry): Promise<DiaryEntry> {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      self.ds.saveNew(this.token, toSave).subscribe({\n        next(saved: DiaryEntry) {\n          resolve(saved);\n        },\n        error(err) {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  async saveNew() {\n    const toSave: DiaryEntry = this.diaryForm.value;\n    try {\n      const saved = await this.save(toSave);\n      this.entries = [saved, ...this.entries];\n      this.reset();\n      this.showMessage('Il salvataggio è andato a buon fine.');\n    } catch (err) {\n      this.showMessage('Qualcosa non ha funzionato. Prova ancora.');\n    }\n  }\n\n  private delete(diary: DiaryEntry): Promise<boolean> {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      self.ds.delete(this.token, diary._id).subscribe({\n        next(done) {\n          resolve(done);\n        },\n        error(err) {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  private async confirmDelete(diary: DiaryEntry) {\n    const self = this;\n    const alert = await this.ac.create({\n      header: 'Cancellazione voce diario',\n      message: 'Stai per <strong>cancellare</strong> una voce',\n      buttons: [\n        {\n          text: 'Annulla',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (cnl) => {}\n        },\n        {\n          text: 'Conferma',\n          handler: async () => {\n            try {\n              const done = await this.delete(diary);\n              if (done) {\n                this.entries = this.entries.filter(e => {\n                  return e._id !== diary._id;\n                });\n                await self.showMessage(`Cancellazione avvenuta con successo.`);\n              } else {\n                await self.showMessage(`Si è verificato un problema. Riprova!`);\n              }\n            } catch (e) {\n              await self.showMessage(`Si è verificato un problema ${e}. Riprova!`);\n            }\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async onDeleteEntryClick(entry: DiaryEntry) {\n    await this.confirmDelete(entry);\n  }\n\n  putEntryOnEdit(entry: DiaryEntry) {\n    this.current = entry;\n    this.updForm.patchValue({\n      notes: entry.notes,\n      when: entry.when,\n    });\n  }\n\n  resetCurrent() {\n    this.current = null;\n  }\n\n  private update(id: string, entry: DiaryEntry): Promise<DiaryEntry> {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      self.ds.update(this.token, id, entry).subscribe({\n        next(saved: DiaryEntry) {\n          resolve(saved);\n        },\n        error(err) {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  async updateEntry(entry: DiaryEntry) {\n    const toSave: DiaryEntry = this.updForm.value;\n    try {\n      const saved = await this.update(entry._id, toSave);\n      this.entries = this.entries.map(e => {\n        if (e._id === entry._id) {\n          return saved;\n        } else {\n          return e;\n        }\n      });\n      this.resetCurrent();\n      this.showMessage('Salvataggio avvenuto correttamente.');\n    } catch (err) {\n      this.showMessage(`Si è verificato un errore ${err}. Riprovare più tardi!`);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { DiaryEntry } from '../models/diary-entry';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiaryService {\n  baseUrl = '/api/casualties/';\n  diary = '/diary';\n  constructor(private hc: HttpClient) { }\n\n  getList(token: string): Observable<DiaryEntry[]> {\n    let session = window.localStorage.getItem('_session');\n    if (! session) {\n      session = 'loggedout';\n    }\n    return this.hc.get<DiaryEntry[]>(`${this.baseUrl}${token}${this.diary}`,\n    {\n      headers: {\n        's-t': session,\n      }\n    });\n  }\n  single(token: string, id: string): Observable<DiaryEntry> {\n    let session = window.localStorage.getItem('_session');\n    if (! session) {\n      session = 'loggedout';\n    }\n    return this.hc.get<DiaryEntry>(`${this.baseUrl}${token}${this.diary}/${id}`,\n    {\n      headers: {\n        's-t': session,\n      }\n    });\n  }\n  saveNew(token: string, diary: DiaryEntry): Observable<DiaryEntry> {\n    let session = window.localStorage.getItem('_session');\n    if (! session) {\n      session = 'loggedout';\n    }\n    return this.hc.post<DiaryEntry>(`${this.baseUrl}${token}${this.diary}`,\n    diary,\n    {\n      headers: {\n        's-t': session,\n      }\n    });\n  }\n  update(token: string, id: string, diary: DiaryEntry): Observable<DiaryEntry> {\n    let session = window.localStorage.getItem('_session');\n    if (! session) {\n      session = 'loggedout';\n    }\n    return this.hc.put<DiaryEntry>(`${this.baseUrl}${token}${this.diary}/${id}`,\n    diary,\n    {\n      headers: {\n        's-t': session,\n      }\n    });\n  }\n  delete(token: string, id: string): Observable<boolean> {\n    return new Observable((observer) => {\n      let session = window.localStorage.getItem('_session');\n      if (! session) {\n        session = 'loggedout';\n      }\n      this.hc.delete(`${this.baseUrl}${token}${this.diary}/${id}`,\n      {\n        headers: {\n          's-t': session\n        },\n        observe: 'response',\n        responseType: 'text',\n      }).subscribe((res: HttpResponse<any>) => {\n        observer.next(res.status === 200);\n      }, (error) => {\n        observer.error(error);\n      });\n    });\n  }\n}\n"],"sourceRoot":""}