{"version":3,"sources":["webpack:///./src/app/casualty-form/casualty-form.module.ts","webpack:///./src/app/casualty-form/casualty-form.page.html","webpack:///./src/app/casualty-form/casualty-form.page.scss","webpack:///./src/app/casualty-form/casualty-form.page.ts","webpack:///./src/app/modals/customer-modal/customer-modal.module.ts","webpack:///./src/app/modals/customer-modal/customer-modal.page.html","webpack:///./src/app/modals/customer-modal/customer-modal.page.scss","webpack:///./src/app/modals/customer-modal/customer-modal.page.ts","webpack:///./src/app/services/setup-casualties.service.ts"],"names":[],"mappings":"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","file":"casualty-form-casualty-form-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CasualtyFormPage } from './casualty-form.page';\n\nimport { CustomerModalPageModule } from 'src/app/modals/customer-modal/customer-modal.module';\nimport { CustomerModalPage } from 'src/app/modals/customer-modal/customer-modal.page';\nimport { AttachmentsPageModule} from 'src/app/attachments/attachments.module';\nimport { DiaryPageModule} from 'src/app/diary/diary.module';\nimport { CasualtyPoliciesPageModule } from 'src/app/casualty-policies/casualty-policies.module';\n\nconst routes: Routes = [\n  {\n    path: ':token',\n    component: CasualtyFormPage\n  },\n  {\n    path: ':token/attachments',\n    loadChildren: 'src/app/attachments/attachments.module#AttachmentsPageModule'\n  },\n  {\n    path: ':token/diary',\n    loadChildren: 'src/app/diary/diary.module#DiaryPageModule'\n  },\n  {\n    path: ':token/policies',\n    loadChildren: 'src/app/casualty-policies/casualty-policies.module#CasualtyPoliciesPageModule'\n  },\n  {\n    path: ':token/policies/:id',\n    loadChildren: '../casualty-policy-form/casualty-policy-form.module#CasualtyPolicyFormPageModule',\n  },\n  {\n    path: ':token/policies/:id/attachments',\n    loadChildren: 'src/app/attachments/attachments.module#AttachmentsPageModule'\n  },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    AttachmentsPageModule,\n    DiaryPageModule,\n    CasualtyPoliciesPageModule,\n    CustomerModalPageModule,\n    RouterModule.forChild(routes)\n  ],\n  entryComponents: [CustomerModalPage],\n  declarations: [CasualtyFormPage]\n})\nexport class CasualtyFormPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button icon-only menuToggle=\\\"start\\\">\\n        <ion-icon name=\\\"menu\\\"></ion-icon>\\n      </ion-menu-button>          \\n    </ion-buttons>\\n    <ion-title>\\n      Pratiche Web\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"ion-padding\\\">\\n    <form [formGroup]=\\\"casualtyForm\\\">\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <p *ngIf=\\\"isNew\\\"><a (click)=\\\"onCancelClick()\\\" [routerLink]=\\\"\\\">Lista Infortuni</a> | Nuovo infortunio</p>\\n            <p *ngIf=\\\"! isNew\\\"><a (click)=\\\"onCancelClick()\\\" [routerLink]=\\\"\\\">Lista Infortuni</a> | Infortunio</p>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label>\\n                <h1 *ngIf=\\\"isNew\\\">Nuovo infortunio</h1>\\n                <h1 *ngIf=\\\"! isNew\\\">Infortunio</h1>        \\n              </ion-label>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col>\\n            <ion-item>\\n              <ion-label>Cliente:</ion-label>\\n              {{nomeCustomer}}\\n              <ion-button color=\\\"primary\\\" slot=\\\"start\\\" (click)=\\\"onCustomerChooseClick()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"compass\\\"></ion-icon>\\n              </ion-button>\\n              <ion-button color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"resetCustomerClick()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n              </ion-button>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" size-sm>\\n            <ion-item>\\n              <ion-label>Data infortunio:</ion-label>\\n              <ion-datetime\\n                placeholder=\\\"Data dell'infortunio\\\"\\n                display-format=\\\"DD/MM/YYYY\\\" \\n                picker-format=\\\"DD/MMMM/YYYY\\\" \\n                formControlName=\\\"casualtyDate\\\"\\n                month-names=\\\"gennaio, febbraio, marzo, aprile, maggio, giugno, luglio, agosto, settembre, ottobre, novembre, dicembre\\\"\\n                cancel-text=\\\"Annulla\\\"\\n                done-text=\\\"Ok\\\">\\n              </ion-datetime>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\" size-sm>\\n            <ion-item>\\n              <ion-label>Ora infortunio:</ion-label>\\n              <ion-datetime\\n                placeholder=\\\"Ora dell'infortunio\\\"\\n                display-format=\\\"HH:mm\\\" \\n                formControlName=\\\"casualtyTime\\\"\\n                cancel-text=\\\"Annulla\\\"\\n                done-text=\\\"Ok\\\">\\n              </ion-datetime>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" size-sm>\\n            <ion-item>\\n              <ion-label>Luogo:</ion-label>\\n              <ion-input placeholder=\\\"Luogo dell'infortunio\\\" formControlName=\\\"place\\\"></ion-input> \\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\" size-sm>\\n            <ion-item>\\n              <ion-label>Descrizione:</ion-label>\\n              <ion-textarea placeholder=\\\"Descrizione dell'infortunio\\\" formControlName=\\\"description\\\" rows=\\\"10\\\"></ion-textarea>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" size-sm>\\n            <ion-item>\\n              <ion-label>Allarme opzionale:</ion-label>\\n              <ion-datetime\\n                placeholder=\\\"Data allarme opzionale\\\"\\n                display-format=\\\"DD/MM/YYYY\\\" \\n                picker-format=\\\"DD/MMMM/YYYY\\\" \\n                formControlName=\\\"optionalAlarm\\\"\\n                month-names=\\\"gennaio, febbraio, marzo, aprile, maggio, giugno, luglio, agosto, settembre, ottobre, novembre, dicembre\\\"\\n                cancel-text=\\\"Annulla\\\"\\n                done-text=\\\"Ok\\\">\\n              </ion-datetime>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"12\\\" size-sm>\\n            <ion-item>\\n              <ion-label>Testo allarme opzionale:</ion-label>\\n              <ion-textarea placeholder=\\\"Testo per l'allarme opzionale\\\" formControlName=\\\"optionalAlarmText\\\" rows=\\\"10\\\"></ion-textarea>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row *ngFor=\\\"let k of setupKinds\\\">\\n          <ion-col>\\n            <ion-item>\\n              <ion-button color=\\\"primary\\\" slot=\\\"start\\\" (click)=\\\"onPickerClick(k)\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-dropdown\\\"></ion-icon>\\n              </ion-button>\\n              <ion-label>{{k.name}}:</ion-label>\\n              <ion-input placeholder=\\\"--\\\" [formControlName]=\\\"k._id\\\" readonly=\\\"true\\\"></ion-input>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row *ngIf=\\\"token && token !== '' && token !=='new'\\\" class=\\\"ion-align-items-center\\\">\\n          <ion-col size=\\\"auto\\\">\\n            <h1>Allegati</h1>\\n          </ion-col>\\n          <ion-col>\\n            <ion-button color=\\\"primary\\\" (click)=\\\"onAddAttachmentClick()\\\">\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"add\\\"></ion-icon>\\n            </ion-button>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row *ngIf=\\\"token && token !== ''\\\">\\n          <ion-col>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row *ngFor=\\\"let a of attachments\\\">\\n          <ion-col>\\n            <ion-item>\\n              <ion-label text-wrap>\\n                <ion-text color=\\\"tertiary\\\">{{a.name}}</ion-text>\\n              </ion-label>\\n              <ion-note slot=\\\"end\\\" class=\\\"ion-hide-sm-down\\\">\\n                {{a.tags}} {{a.kind}}\\n              </ion-note>\\n              <ion-button color=\\\"tertiary\\\" slot=\\\"start\\\" href=\\\"http://localhost:8080/api/attachments/{{a.kind}}/{{token}}/{{a._id}}/attachment\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"cloud-download\\\"></ion-icon>\\n              </ion-button>\\n              <ion-button color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"onDeleteAttachmentClick(a)\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n              </ion-button>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row *ngIf=\\\"attachments && attachments.length > 0\\\">\\n          <ion-col>\\n            <ion-button color=\\\"primary\\\" (click)=\\\"onAddAttachmentClick()\\\">\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"add\\\"></ion-icon>\\n            </ion-button>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" size-sm>\\n            <div>\\n              <ion-button color=\\\"primary\\\" (click)=\\\"onDiaryClick()\\\" *ngIf=\\\"token && token !== '' && token !=='new'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"document\\\"></ion-icon>\\n              </ion-button>\\n              <ion-button color=\\\"primary\\\" (click)=\\\"onPoliciesClick()\\\" *ngIf=\\\"token && token !== '' && token !=='new'\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"paper\\\"></ion-icon>\\n              </ion-button>\\n              <ion-button color=\\\"primary\\\" [disabled]=\\\"!casualtyForm.valid\\\" (click)=\\\"onSaveClick()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"save\\\"></ion-icon>\\n              </ion-button>\\n              <ion-button color=\\\"tertiary\\\" (click)=\\\"onCancelClick()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-round-back\\\"></ion-icon>\\n              </ion-button>\\n            </div>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </form>\\n  </div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Nhc3VhbHR5LWZvcm0vY2FzdWFsdHktZm9ybS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder, FormControl} from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ModalController, AlertController, ToastController, PickerController } from '@ionic/angular';\nimport { ServiceStatus } from 'src/app/models/service-status.enum';\nimport { SetupCasualtiesService} from '../services/setup-casualties.service';\nimport { SetupKind } from '../models/setup-kind';\nimport { SetupOption } from '../models/setup-option';\nimport { Attachment } from '../models/attachment';\nimport { AttachmentsService } from '../services/attachments.service';\nimport { Casualty } from 'src/app/models/casualty';\nimport { CasualtyService } from 'src/app/services/casualty.service';\nimport { Customer } from 'src/app/models/customer';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { CustomerModalPage } from 'src/app/modals/customer-modal/customer-modal.page';\n\n@Component({\n  selector: 'app-casualty-form',\n  templateUrl: './casualty-form.page.html',\n  styleUrls: ['./casualty-form.page.scss'],\n})\nexport class CasualtyFormPage implements OnInit {\n  casualty: Casualty;\n  @Input() casualtyForm: FormGroup;\n  isNew = true;\n  customers: Customer[] = [];\n  @Input() attachments: Attachment[];\n  @Input() nomeCustomer = '';\n  selections: object = {};\n  token: string;\n  attachmentKinds = [\n    'infortunio-certificato-medico',\n    'infortunio-modulo-denuncia',\n    'infortunio-documento',\n  ];\n  setupKinds: SetupKind[] = [];\n  options: Map<string, SetupOption[]>;\n  param$: Subscription;\n\n  constructor(\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private mc: ModalController,\n    private pc: PickerController,\n    private ac: AlertController,\n    private tc: ToastController,\n    private as: AttachmentsService,\n    private scs: SetupCasualtiesService,\n    private cas: CasualtyService,\n    private cs: CustomerService,\n  ) {\n    this.casualtyForm = fb.group({\n      casualtyDate: [''],\n      casualtyTime: [''],\n      place: [''],\n      prescriptionDate: [''],\n      description: [''],\n      optionalAlarm: [''],\n      optionalAlarmText: [''],\n      customerId: ['']\n    });\n  }\n\n  private getCasualtyToken(): Promise<string> {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      self.param$ = self.route.params.subscribe(params => {\n        resolve(params.token);\n      });\n    });\n  }\n\n  private getSetupKinds(): Promise<SetupKind[]> {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      self.scs.getKinds().subscribe({\n        next(ris) {\n          resolve(ris);\n        },\n        error(err) {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  private getSetupOptions(idKind: string): Promise<SetupOption[]> {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      self.scs.getOptions(idKind).subscribe({\n        next(ris) {\n          resolve(ris);\n        },\n        error(err) {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  private getAttachments(kind: string): Promise<Attachment[]> {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      if (self.token !== 'new') {\n        self.as.asyncGetAttachments(self.token, kind).subscribe({\n          next(atchs) {\n            resolve(atchs);\n          },\n          error(err) {\n            resolve([]);\n          }\n        });\n      } else {\n        resolve([]);\n      }\n    });\n  }\n\n  private initOptions(): Promise<void> {\n    const self = this;\n    return new Promise(async resolve => {\n      await this.setupKinds.reduce(async (promise, k) => {\n        this.casualtyForm.addControl(k._id, new FormControl(''));\n        await promise;\n        const opts = await this.getSetupOptions(k._id);\n        this.options.set(k._id, opts);\n      }, Promise.resolve());\n      resolve();\n    });\n  }\n\n  private getCustomers(): Promise<Customer[]> {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      self.cs.asyncGetCustomers().subscribe(customers => {\n        resolve(customers);\n      });\n    });\n  }\n\n  async onPickerClick(kind: SetupKind) {\n    const options = this.options.get(kind._id);\n    const pickerOptions = options.map(opt => {\n      return {\n        text: opt.name,\n        value: opt._id\n      };\n    });\n    const picker = await this.pc.create({\n      buttons: [\n        {\n          text: 'Ok',\n          handler: (selected => {\n            this.casualtyForm.get(kind._id).setValue(selected[kind.name].text);\n            const fieldName = `${kind._id}`;\n            this.selections[fieldName] = selected[kind.name].value;\n          })\n        },\n        {\n          text: 'Annulla'\n        },\n        {\n          text: 'Svuota',\n          handler: (selected => {\n            this.casualtyForm.get(kind._id).setValue('');\n            const fieldName = `${kind._id}`;\n            this.selections[fieldName] = '';\n          })\n        }\n      ],\n      keyboardClose: true,\n      columns: [{\n        name: kind.name,\n        options: pickerOptions\n      }]\n    });\n    await picker.present();\n  }\n\n  private getCasualty(token: string): Promise<Casualty> {\n    return new Promise((resolve, reject) => {\n      this.cas.single(token).subscribe(policy => {\n        resolve(policy);\n      });\n    });\n  }\n\n  private initCustomer(c: Casualty) {\n    if (c.customerId) {\n      const cus = this.customers.reduce((a, b) => {\n        if (b.token === c.customerId) {\n          return b;\n        } else {\n          return a;\n        }\n      }, null);\n      if (cus) {\n        this.nomeCustomer = `${cus.firstName} ${cus.lastName}`;\n      }\n    }\n  }\n\n  async ionViewWillEnter() {\n    try {\n      this.options = new Map<string, SetupOption[]>();\n      this.token = await this.getCasualtyToken();\n      this.isNew = this.token === 'new';\n      if (! this.isNew) {\n        this.casualty = await this.getCasualty(this.token);\n        this.setupKinds = await this.getSetupKinds();\n        this.selections = this.casualty.options;\n        if (this.setupKinds && this.setupKinds.length > 0) {\n          await this.initOptions();\n        }\n        this.casualtyForm.patchValue(this.casualty);\n      } else {\n        this.setupKinds = await this.getSetupKinds();\n        if (this.setupKinds && this.setupKinds.length > 0) {\n          await this.initOptions();\n        }\n      }\n      this.attachments = [];\n      for (const kind of this.attachmentKinds) {\n        const ats = await this.getAttachments(kind);\n        this.attachments = this.attachments.concat(ats);\n      }\n      this.customers = await this.getCustomers();\n      if (! this.isNew) {\n        this.initCustomer(this.casualty);\n      }\n    } catch (e) {\n      console.error(e);\n      this.token = '';\n      this.isNew = true;\n    }\n  }\n\n  ionViewWillExit() {\n    if (this.param$) {\n      this.param$.unsubscribe();\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  onCancelClick() {\n    this.router.navigate(['home']);\n  }\n\n  onDiaryClick() {\n    this.router.navigate(['casualty', this.token, 'diary']);\n  }\n\n  onPoliciesClick() {\n    this.router.navigate(['casualty', this.token, 'policies']);\n  }\n\n  resetCustomerClick() {\n    this.nomeCustomer = '';\n    this.casualtyForm.get('customerId').setValue('');\n  }\n\n  async onCustomerChooseClick() {\n    const self = this;\n    const modal = await this.mc.create({\n      component: CustomerModalPage,\n      componentProps: {\n        baseCustomers: self.customers\n      }\n    });\n    await modal.present();\n    const  { data } = await modal.onDidDismiss();\n    if (data) {\n      this.nomeCustomer = `${data.firstName} ${data.lastName}`;\n      this.casualtyForm.get('customerId').setValue(data.token);\n    }\n  }\n\n  onAddAttachmentClick() {\n    this.router.navigate(['casualty', this.token, 'attachments'], {queryParams: {kind: 'infortunio'}});\n  }\n\n  private async showMessage(message: string) {\n    const toast = await this.tc.create({\n      message,\n      duration: 2000\n    });\n    await toast.present();\n  }\n\n  private deleteAttachment(attachment: Attachment): Promise<ServiceStatus> {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      self.as.asyncDeleteAttachment(attachment).subscribe({\n        next(ris) {\n          resolve(ris);\n        },\n        error(err) {\n          resolve(ServiceStatus.FAILED);\n        }\n      });\n    });\n  }\n\n  private async confirmDelete(attachment: Attachment) {\n    const self = this;\n    const alert = await this.ac.create({\n      header: 'Cancellazione allegato',\n      message: 'Stai per <strong>cancellare</strong> un allegato',\n      buttons: [\n        {\n          text: 'Annulla',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (cnl) => {}\n        },\n        {\n          text: 'Conferma',\n          handler: async () => {\n            try {\n              const ss = await this.deleteAttachment(attachment);\n              if (ss === ServiceStatus.OK) {\n                this.attachments = []; \n                for (const a of this.attachmentKinds) {\n                  const ats = await this.getAttachments(a);\n                  this.attachments = this.attachments.concat(ats);\n                }\n                await self.showMessage('Allegato correttamente cancellato.');\n              } else {\n                await self.showMessage('Si è verificato un problema. Riprova!');\n              }\n            } catch (e) {\n              await self.showMessage(`Si è verificato un problema ${e}. Riprova!`);\n            }\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async onDeleteAttachmentClick(attachment: Attachment) {\n    await this.confirmDelete(attachment);\n  }\n\n  save(c: Casualty): Promise<Casualty> {\n    return new Promise((resolve, reject ) => {\n      if (this.isNew) {\n        this.cas.saveNew(c).subscribe(nc => {\n          resolve(nc);\n        });\n      } else {\n        this.cas.update(c).subscribe(uc => {\n          resolve(uc);\n        });\n      }\n    });\n  }\n\n  generateCasualty(): Promise<Casualty> {\n    return new Promise((resolve, reject) => {\n      const casualty: Casualty = {\n        ...this.casualtyForm.value,\n        options: this.selections\n      };\n      if (this.isNew) {\n        resolve(casualty);\n      } else {\n        Object.assign(this.casualty, casualty);\n        resolve(this.casualty);\n      }\n    });\n  }\n\n  async onSaveClick() {\n    try {\n      const c = await this.generateCasualty();\n      const savedCasualty = await this.save(c);\n      await this.showMessage('Salvataggio avvenuto correttamente');\n      this.router.navigate(['casualty', savedCasualty.token]);\n    } catch (err) {\n      console.error(err);\n      await this.showMessage(`Qualcosa è andato storto, riprovare.`);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CustomerModalPage } from './customer-modal.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CustomerModalPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CustomerModalPage]\n})\nexport class CustomerModalPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Scelta opzione</ion-title>\\n    <ion-button slot=\\\"start\\\" (click)=\\\"DismissNoChoice()\\\">\\n      <ion-icon slot=\\\"icon-only\\\" name=\\\"close-circle-outline\\\"></ion-icon>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n  \\n<ion-content>\\n  <div class=\\\"ion-padding\\\">\\n    <div *ngIf=\\\"!customers || customers.length === 0\\\">\\n      Nessuna opzione presente.\\n    </div>\\n    <div *ngIf=\\\"baseCustomers && baseCustomers.length > 0\\\">\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" size-sm>\\n            <ion-item lines=\\\"none\\\">                \\n              <ion-searchbar placeholder=\\\"Cerca\\\" (ionChange)=\\\"searchChange($event)\\\"></ion-searchbar>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </div>\\n    <ion-grid *ngIf=\\\"customers && customers.length > 0\\\">\\n      <ion-row>\\n        <ion-col size=\\\"12\\\" size-sm>\\n          <ion-virtual-scroll [items]=\\\"customers\\\">\\n            <ion-item *virtualItem=\\\"let c\\\" lines=\\\"full\\\" approxItemHeight=\\\"57px\\\">\\n              <ion-button color=\\\"primary\\\" (click)=\\\"onItemClick(c)\\\" slot=\\\"start\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark-circle-outline\\\"></ion-icon>\\n              </ion-button>\\n              <ion-note slot=\\\"end\\\" class=\\\"ion-hide-sm-down\\\" *ngIf=\\\"c.address\\\">\\n                {{c.address.city}} {{c.address.province}} {{c.address.nation}}\\n              </ion-note>\\n              <ion-label text-wrap>{{c.firstName}}, {{c.lastName}}</ion-label>\\n            </ion-item>            \\n          </ion-virtual-scroll>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9jdXN0b21lci1tb2RhbC9jdXN0b21lci1tb2RhbC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Customer } from 'src/app/models/customer';\n\n@Component({\n  selector: 'app-customer-modal',\n  templateUrl: './customer-modal.page.html',\n  styleUrls: ['./customer-modal.page.scss'],\n})\nexport class CustomerModalPage implements OnInit {\n\n  constructor(private mc: ModalController) { }\n  baseCustomers: Customer[] = [];\n  @Input() customers: Customer[] = [];\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.customers = this.baseCustomers;\n  }\n\n  private filterData(query: string): Promise<Customer[]> {\n    const self = this;\n    return new Promise ((resolve, reject) => {\n      if (query && query !== '') {\n        try {\n          const regex = new RegExp(`${query}`, 'i');\n          resolve(self.baseCustomers.filter(obj => {\n            const srep = JSON.stringify(obj);\n            return regex.test(srep);\n          }));\n        } catch (e) {\n          resolve(self.baseCustomers);\n        }\n      } else {\n        resolve(this.baseCustomers);\n      }\n    });\n  }\n\n  async searchChange(event) {\n    this.customers = await this.filterData(event.target.value);\n  }\n\n  onItemClick(c: Customer) {\n    this.mc.dismiss(c);\n  }\n\n  DismissNoChoice() {\n    this.mc.dismiss();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SetupKind } from '../models/setup-kind';\nimport { SetupOption } from '../models/setup-option';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SetupCasualtiesService {\n  private baseUrl = '/api/setupcasualties/';\n  constructor(private hc: HttpClient) { }\n\n  getKinds(): Observable<SetupKind[]> {\n    let session = window.localStorage.getItem('_session');\n    if (! session) {\n      session = 'loggedout';\n    }\n    return this.hc.get<SetupKind[]>(`${this.baseUrl}kinds`, {\n      headers : {\n        's-t': session\n      }\n    });\n  }\n  getOptions(idKind: string): Observable<SetupOption[]> {\n    let session = window.localStorage.getItem('_session');\n    if (! session) {\n      session = 'loggedout';\n    }\n    return this.hc.get<SetupOption[]>(`${this.baseUrl}options/${idKind}`, {\n      headers : {\n        's-t': session\n      }\n    });\n  }\n\n}\n"],"sourceRoot":""}