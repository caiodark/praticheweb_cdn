{"version":3,"sources":["webpack:///./src/app/modal-word-list/modal-word-list.module.ts","webpack:///./src/app/modal-word-list/modal-word-list.page.html","webpack:///./src/app/modal-word-list/modal-word-list.page.scss","webpack:///./src/app/modal-word-list/modal-word-list.page.ts","webpack:///./src/app/organization-form/organization-form.module.ts","webpack:///./src/app/organization-form/organization-form.page.html","webpack:///./src/app/organization-form/organization-form.page.scss","webpack:///./src/app/organization-form/organization-form.page.ts"],"names":[],"mappings":"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","file":"organization-form-organization-form-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ModalWordListPage } from './modal-word-list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule\n  ],\n  declarations: [ModalWordListPage],\n  exports: [ModalWordListPage]\n})\nexport class ModalWordListPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Scelta opzione</ion-title>\\n    <ion-button slot=\\\"start\\\" (click)=\\\"DismissNoChoice()\\\">\\n      <ion-icon slot=\\\"icon-only\\\" name=\\\"close-circle-outline\\\"></ion-icon>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"ion-padding\\\">\\n    <div *ngIf=\\\"!Organizations || Organizations.length === 0\\\">\\n      Nessuna opzione presente.\\n    </div>\\n    <div *ngIf=\\\"BaseOrganizations && BaseOrganizations.length > 0\\\">\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" size-sm>\\n              <ion-item lines=\\\"none\\\">                \\n                <ion-searchbar placeholder=\\\"Cerca\\\" (ionChange)=\\\"searchChange($event)\\\"></ion-searchbar>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n      </ion-grid>\\n    </div>\\n    <ion-grid *ngIf=\\\"Organizations && Organizations.length > 0\\\">\\n      <ion-row>\\n        <ion-col size=\\\"12\\\" size-sm>\\n          <ion-virtual-scroll [items]=\\\"Organizations\\\">\\n            <ion-item *virtualItem=\\\"let o\\\" lines=\\\"full\\\" approxItemHeight=\\\"57px\\\">\\n              <ion-button color=\\\"primary\\\" (click)=\\\"onItemClick(o)\\\" slot=\\\"start\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark-circle-outline\\\"></ion-icon>\\n              </ion-button>\\n              <ion-note slot=\\\"end\\\" class=\\\"ion-hide-sm-down\\\">\\n                {{o.address}}, {{o.city}}, {{o.province}}\\n              </ion-note>\\n              <ion-label text-wrap>{{o.name}}</ion-label>\\n            </ion-item>            \\n          </ion-virtual-scroll>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFsLXdvcmQtbGlzdC9tb2RhbC13b3JkLWxpc3QucGFnZS5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Organization } from '../models/organization';\nimport { WorldService } from '../services/world.service';\n\n@Component({\n  selector: 'app-modal-word-list',\n  templateUrl: './modal-word-list.page.html',\n  styleUrls: ['./modal-word-list.page.scss'],\n})\nexport class ModalWordListPage implements OnInit {\n\n  @Input() BaseOrganizations: Array<Organization> = [];\n  @Input() Organizations: Array<Organization> = [];\n\n  constructor(private ws: WorldService, private mc: ModalController) { }\n\n  ngOnInit() {\n  }\n\n  private getList(kind: string): Promise<Array<Organization>> {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      self.ws.asyncGetList('Compagnie').subscribe({\n        next(ris) {\n          resolve(ris);\n        },\n        error(err) {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  private filterData(query: string): Promise<Array<Organization>> {\n    const self = this;\n    return new Promise ((resolve, reject) => {\n      if (query && query !== '') {\n        try {\n          resolve(self.BaseOrganizations.filter(obj => {\n            const srep = JSON.stringify(obj);\n            const regex = new RegExp(`${query}`, 'i');\n            return regex.test(srep);\n          }));\n        } catch (e) {\n          resolve(self.BaseOrganizations);\n        }\n      } else {\n        resolve(this.BaseOrganizations);\n      }\n    });\n  }\n\n  async searchChange(event) {\n    console.log(event.target.value);\n    this.Organizations = await this.filterData(event.target.value);\n  }\n\n  async ionViewWillEnter() {\n    try {\n      this.BaseOrganizations = await this.getList('Compagnie');\n    } catch (e) {\n      this.BaseOrganizations = [];\n    }\n    this.Organizations = this.BaseOrganizations;\n  }\n\n  DismissNoChoice() {\n    this.mc.dismiss();\n  }\n\n  onItemClick(organization: Organization) {\n    this.mc.dismiss(organization);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrganizationFormPage } from './organization-form.page';\nimport { ModalWordListPageModule} from '../modal-word-list/modal-word-list.module';\nimport { ModalWordListPage} from '../modal-word-list/modal-word-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrganizationFormPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ModalWordListPageModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  entryComponents: [ModalWordListPage],\n  declarations: [OrganizationFormPage]\n})\nexport class OrganizationFormPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button icon-only menuToggle=\\\"start\\\">\\n          <ion-icon name=\\\"menu\\\"></ion-icon>\\n      </ion-menu-button>          \\n    </ion-buttons>\\n    <ion-title>\\n          Pratiche Web\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <form [formGroup]=\\\"OrganizationForm\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <p *ngIf=\\\"IsNew\\\"><a (click)=\\\"onCancelClick()\\\" [routerLink]=\\\"\\\">{{PageParams?.kind}}</a> | Nuova anagrafica</p>\\n          <p *ngIf=\\\"! IsNew\\\"><a (click)=\\\"onCancelClick()\\\" [routerLink]=\\\"\\\">{{PageParams?.kind}}</a> | Anagrafica</p>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col>\\n          <h1 *ngIf=\\\"IsNew\\\">Nuova anagrafica</h1>\\n          <h1 *ngIf=\\\"! IsNew\\\">Anagrafica</h1>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\" size-sm>\\n          <ion-item>\\n            <ion-label>Nome:</ion-label>\\n            <ion-input placeholder=\\\"Nome\\\" formControlName=\\\"name\\\"></ion-input> \\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\" size-md>\\n          <ion-item>\\n            <ion-label>Indirizzo:</ion-label>\\n            <ion-input placeholder=\\\"Via e numero civico\\\" formControlName=\\\"address\\\"></ion-input> \\n          </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"12\\\" size-md>\\n          <ion-item>\\n            <ion-label>Citt&agrave;:</ion-label>\\n            <ion-input placeholder=\\\"Città\\\" formControlName=\\\"city\\\"></ion-input> \\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\" size-md>\\n          <ion-item>\\n            <ion-label>Provincia:</ion-label>\\n            <ion-input placeholder=\\\"Provincia\\\" formControlName=\\\"province\\\"></ion-input> \\n          </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"12\\\" size-md>\\n          <ion-item>\\n            <ion-label>CAP:</ion-label>\\n            <ion-input placeholder=\\\"CAP\\\" formControlName=\\\"zip\\\"></ion-input> \\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\" size-md>\\n          <ion-item>\\n            <ion-label>Codice fiscale:</ion-label>\\n            <ion-input placeholder=\\\"Codice fiscale\\\" formControlName=\\\"fiscalCode\\\"></ion-input> \\n          </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"12\\\" size-md>\\n          <ion-item>\\n            <ion-label>Partita IVA:</ion-label>\\n            <ion-input placeholder=\\\"Partita IVA\\\" formControlName=\\\"vat\\\"></ion-input> \\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row *ngIf=\\\"PageParams.kind !== 'Compagnie'\\\">\\n        <ion-col size=\\\"auto\\\" class=\\\"ion-align-items-center\\\">\\n          <h2>Compagnie</h2>\\n        </ion-col>\\n        <ion-col>\\n          <ion-button color=\\\"tertiary\\\" (click)=\\\"AddLinkClick()\\\">\\n            <ion-icon name=\\\"add\\\" slot=\\\"icon-only\\\"></ion-icon>\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row *ngFor=\\\"let c of Companies\\\">\\n        <ion-col>\\n          <ion-item>\\n            <ion-button color=\\\"danger\\\" (click)=\\\"DeleteLink(c)\\\">\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n            </ion-button>\\n            <ion-label>\\n              {{c.name}}\\n            </ion-label>\\n            <ion-note slot=\\\"end\\\">\\n              {{c.city}} {{c.address}}\\n            </ion-note>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\" size-sm>\\n          <div>\\n            <ion-button color=\\\"primary\\\" [disabled]=\\\"!OrganizationForm.valid\\\" (click)=\\\"onSaveClick()\\\">\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"save\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button color=\\\"tertiary\\\" (click)=\\\"onCancelClick()\\\">\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-round-back\\\"></ion-icon>\\n            </ion-button>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>  \\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yZ2FuaXphdGlvbi1mb3JtL29yZ2FuaXphdGlvbi1mb3JtLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastController, ModalController } from '@ionic/angular';\nimport { Subscription, from } from 'rxjs';\nimport { Organization } from '../models/organization';\nimport { ServiceStatus } from '../models/service-status.enum';\nimport { WorldService } from '../services/world.service';\nimport { OrganizationFormPageModule } from './organization-form.module';\nimport { ModalWordListPage } from '../modal-word-list/modal-word-list.page';\n\ninterface OrganizationPageParams {\n  kind: string;\n  id: string;\n}\n\n@Component({\n  selector: 'app-organization-form',\n  templateUrl: './organization-form.page.html',\n  styleUrls: ['./organization-form.page.scss'],\n})\n\nexport class OrganizationFormPage implements OnInit, OnDestroy {\n\n  OrganizationForm: FormGroup;\n  Route$: Subscription;\n  PageParams: OrganizationPageParams = {\n    kind: '',\n    id: 'new'\n  };\n  Org: Organization;\n  IsNew: boolean;\n  @Input() Companies: Array<Organization> = [];\n\n  constructor(\n    private service: WorldService,\n    private fb: FormBuilder,\n    private tc: ToastController,\n    private ar: ActivatedRoute,\n    private router: Router,\n    private mc: ModalController) {\n    this.OrganizationForm = fb.group({\n      name: ['', Validators.required],\n      address: [''],\n      city: [''],\n      zip: ['', Validators.pattern(/^\\d{5}$/)],\n      province: [''],\n      fiscalCode: ['', Validators.pattern(/^[A-Z]{6}\\d{2}[A-Z]{1}\\d{2}[A-Z]{1}\\d{3}[A-Z]{1}$/)],\n      vat: ['', Validators.pattern(/^\\d{11}$/)]\n    });\n  }\n\n  private GetParams(route: ActivatedRoute): Promise<OrganizationPageParams> {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      self.Route$ = route.params.subscribe(params => {\n        const resp: OrganizationPageParams = {\n          kind: params['world'],\n          id: params['id']\n        };\n        resolve(resp);\n      });\n    });\n  }\n\n  private GetOrganization(kind: string, id: string, service: WorldService): Promise<Organization> {\n    const find = service.asyncGet;\n    return new Promise((resolve, reject) => {\n      find.bind(service)(kind, id).subscribe({\n        next(ris) {\n          resolve(ris);\n        },\n        error(err) {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  async loadData() {\n    try {\n      this.Org = await this.GetOrganization(this.PageParams.kind, this.PageParams.id, this.service);\n      this.Companies = this.Org.companies || [];\n      this.OrganizationForm.patchValue(this.Org);\n    } catch (e) {\n      this.Org = null;\n      this.Companies = [];\n    }\n  }\n\n  async ngOnInit() {\n    try {\n      this.PageParams = await this.GetParams(this.ar);\n      this.IsNew = this.PageParams.id === 'new';\n      if (! this.IsNew) {\n        await this.loadData();\n      }\n    } catch (e) {\n      this.PageParams = {\n        kind: '',\n        id: ''\n      };\n      this.Org = null;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.Route$) {\n      this.Route$.unsubscribe();\n    }\n  }\n\n  onCancelClick() {\n    this.router.navigate(['organizations', this.PageParams.kind]);\n  }\n\n  private SaveOrganization(org: Organization, isNew: boolean): Promise<ServiceStatus> {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      if (isNew) {\n        self.service.asyncPost(org).subscribe({\n          next(ris) {\n            self.PageParams.id = ris.replace(/\\\"/g, '');\n            self.IsNew = false;\n            resolve(ServiceStatus.OK);\n          },\n          error(err) {\n            reject(err);\n          }\n        });\n      } else {\n        self.service.asyncPut(org).subscribe({\n          next(ris) {\n            resolve(ris);\n          },\n          error(err) {\n            reject(err);\n          }\n        });\n      }\n    });\n  }\n\n  async ShowMessage(message: string) {\n    const toast = await this.tc.create({\n      message,\n      duration: 2000\n    });\n    await toast.present();\n  }\n\n  private FillFields(org: Organization, fg: FormGroup): Organization {\n    const formObj = fg.value;\n    org.name = formObj.name;\n    org.kind = this.PageParams.kind;\n    org.address = formObj.address;\n    org.city = formObj.city;\n    org.fiscalCode = formObj.fiscalCode;\n    org.province = formObj.province;\n    org.vat = formObj.vat;\n    org.zip = formObj.zip;\n\n    return org;\n  }\n\n  async onSaveClick() {\n    let org: Organization;\n    if (this.IsNew) {\n      org = new Organization();\n    } else {\n      org = this.Org;\n    }\n    org = this.FillFields(org, this.OrganizationForm);\n    org.companies = this.Companies;\n    try {\n      const result = await this.SaveOrganization(org, this.IsNew);\n      this.ShowMessage('Salvataggio dati completato');\n      if (result === ServiceStatus.OK) {\n        this.router.navigate(['organizations', this.PageParams.kind, this.PageParams.id]);\n      }\n    } catch (e) {\n      this.ShowMessage(`C'è stato un errore. Riprovare! ${e}`);\n    }\n  }\n\n  CreateLink(org: Organization) {\n    this.Companies.push(org);\n  }\n\n  DeleteLink(org: Organization) {\n    this.Companies = this.Companies.filter(obj => obj._id !== org._id);\n  }\n\n  async AddLinkClick() {\n    const modal = await this.mc.create({\n      component: ModalWordListPage\n    });\n    await modal.present();\n    const { data } = await modal.onDidDismiss();\n    if (data) {\n      this.CreateLink(data);\n    }\n  }\n}\n"],"sourceRoot":""}