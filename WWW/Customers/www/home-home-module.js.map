{"version":3,"sources":["webpack:///./src/app/home/home.module.ts","webpack:///./src/app/home/home.page.html","webpack:///./src/app/home/home.page.scss","webpack:///./src/app/home/home.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACA;AACE;AAER;AAgBvC;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAd1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC;oBACpB;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,mDAAQ;qBACpB;iBACF,CAAC;aACH;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;ACtB3B,40DAA40D,SAAS,4DAA4D,qVAAqV,mBAAmB,IAAI,gBAAgB,IAAI,oBAAoB,oQAAoQ,aAAa,GAAG,YAAY,sK;;;;;;;;;;;ACArkF,+DAA+D,mI;;;;;;;;;;;;;;;;;;;;;ACAK;AACF;AAC1B;AAGsB;AACC;AAO/D;IAQE,kBACU,MAAc,EACd,EAAmB,EACnB,EAAmB,EACnB,EAAmB;QAHnB,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAiB;QACnB,OAAE,GAAF,EAAE,CAAiB;QACnB,OAAE,GAAF,EAAE,CAAiB;QAXpB,cAAS,GAAoB,EAAE,CAAC;QAChC,gBAAW,GAAG,EAAE,CAAC;QACjB,gBAAW,GAAG,IAAI,CAAC;QAC5B,UAAK,GAAG,EAAE,CAAC;QAEX,kBAAa,GAAoB,EAAE,CAAC;IAO/B,CAAC;IAEQ,8BAAW,GAAzB,UAA0B,OAAe;;;;;4BACzB,qBAAM,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC;4BACjC,OAAO;4BACP,QAAQ,EAAE,IAAI;yBACf,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACvB;IAEO,+BAAY,GAApB;QACE,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC;gBACpC,IAAI,YAAC,KAAK;oBACR,OAAO,CAAC,KAAK,CAAC,CAAC;gBACjB,CAAC;gBACD,KAAK,YAAC,GAAG;oBACP,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAEa,2BAAQ,GAAtB;;;;;;;wBAEI,SAAI;wBAAiB,qBAAM,IAAI,CAAC,YAAY,EAAE;;wBAA9C,GAAK,aAAa,GAAG,SAAyB,CAAC;wBAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;;;;wBAEpC,IAAI,CAAC,WAAW,CAAC,+CAA+C,CAAC,CAAC;;;;;;KAErE;IAEO,6BAAU,GAAlB,UAAmB,KAAa;QAAhC,iBAmBC;QAlBC,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,OAAO,IAAI,OAAO,CAAE,UAAC,OAAO,EAAE,MAAM;YAClC,IAAI,KAAK,IAAI,KAAK,KAAK,EAAE,EAAE;gBACzB,IAAI;oBACF,OAAO,CAAC,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,aAAG;wBACnC,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;wBACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;wBAClB,IAAM,KAAK,GAAG,IAAI,MAAM,CAAC,KAAG,KAAO,EAAE,GAAG,CAAC,CAAC;wBAC1C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACnB,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC1B,CAAC,CAAC,CAAC,CAAC;iBACL;gBAAC,OAAO,CAAC,EAAE;oBACV,OAAO,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;iBAC7B;aACF;iBAAM;gBACL,OAAO,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEa,+BAAY,GAA1B,UAA2B,KAAK;;;;;;wBAC9B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBAChC,SAAI;wBAAa,qBAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;;wBAA1D,GAAK,SAAS,GAAG,SAAyC,CAAC;;;;;KAC5D;IAEO,8BAAW,GAAnB,UAAoB,KAAK;QACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,mCAAgB,GAAhB;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,2BAAQ,GAAR,cAAY,CAAC;IAEb,8BAAW,GAAX,cAAe,CAAC;IAEhB,gCAAa,GAAb;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,8BAAW,GAAX,UAAY,KAAa;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC,CAAC;IACjD,CAAC;IAEO,6BAAU,GAAlB,UAAmB,KAAa;QAC9B,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;gBAC3C,IAAI,YAAC,GAAG;oBACN,OAAO,CAAC,GAAG,CAAC,CAAC;gBACf,CAAC;gBACD,KAAK,YAAC,GAAG;oBACP,OAAO,CAAC,yEAAa,CAAC,MAAM,CAAC,CAAC;gBAChC,CAAC;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAEa,8BAAW,GAAzB,UAA0B,OAAe;;;;;4BACzB,qBAAM,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC;4BACjC,OAAO;4BACP,QAAQ,EAAE,IAAI;yBACf,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACvB;IAEa,gCAAa,GAA3B,UAA4B,KAAa;;;;;;;wBACjC,IAAI,GAAG,IAAI,CAAC;wBACJ,qBAAM,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC;gCACjC,MAAM,EAAE,uBAAuB;gCAC/B,OAAO,EAAE,iDAAiD;gCAC1D,OAAO,EAAE;oCACP;wCACE,IAAI,EAAE,SAAS;wCACf,IAAI,EAAE,QAAQ;wCACd,QAAQ,EAAE,WAAW;wCACrB,OAAO,EAAE,UAAC,GAAG,IAAM,CAAC;qCACrB;oCACD;wCACE,IAAI,EAAE,UAAU;wCAChB,OAAO,EAAE;;;;;;wDAEM,qBAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;;wDAAjC,EAAE,GAAG,SAA4B;6DACnC,GAAE,KAAK,yEAAa,CAAC,EAAE,GAAvB,wBAAuB;wDACzB,qBAAM,IAAI,CAAC,QAAQ,EAAE;;wDAArB,SAAqB,CAAC;wDACtB,qBAAM,IAAI,CAAC,WAAW,CAAC,mCAAmC,CAAC;;wDAA3D,SAA2D,CAAC;;4DAE5D,qBAAM,IAAI,CAAC,WAAW,CAAC,uCAAuC,CAAC;;wDAA/D,SAA+D,CAAC;;;;;wDAGlE,qBAAM,IAAI,CAAC,WAAW,CAAC,sCAA+B,GAAC,eAAY,CAAC;;wDAApE,SAAoE,CAAC;;;;;6CAExE;qCACF;iCACF;6BACF,CAAC;;wBA3BI,KAAK,GAAG,SA2BZ;wBACF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACvB;IAEK,+BAAY,GAAlB,UAAmB,KAAa;;;;4BAC9B,qBAAM,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;;wBAA/B,SAA+B,CAAC;;;;;KACjC;IApJQ;QAAR,2DAAK,EAAE;wEAAY,KAAK;+CAAgB;IAChC;QAAR,2DAAK,EAAE;;iDAAkB;IACjB;QAAR,2DAAK,EAAE;;iDAAoB;IAHjB,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,sFAA6B;;SAE9B,CAAC;+EAUkB,sDAAM;YACV,0EAAe;YACf,8DAAe;YACf,8DAAe;OAZlB,QAAQ,CAsJpB;IAAD,eAAC;CAAA;AAtJoB","file":"home-home-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button icon-only menuToggle=\\\"start\\\">\\n        <ion-icon name=\\\"menu\\\"></ion-icon>\\n      </ion-menu-button>          \\n    </ion-buttons>\\n    <ion-title>\\n      Pratiche Web\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"ion-padding\\\">\\n    <h1>Clienti</h1>\\n    <div *ngIf=\\\"!baseCustomers || baseCustomers.length === 0\\\">\\n      Nessun cliente presente. <br />\\n      <ion-button color=\\\"tertiary\\\" size=\\\"default\\\" (click)=\\\"onCreateClick()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"create\\\"></ion-icon>\\n      </ion-button>\\n    </div>\\n    <div *ngIf=\\\"baseCustomers && baseCustomers.length > 0\\\">\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" size-sm>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-button color=\\\"tertiary\\\" (click)=\\\"onCreateClick()\\\" size=\\\"default\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"create\\\"></ion-icon>\\n              </ion-button>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" size-sm>\\n              <ion-item lines=\\\"none\\\">                \\n                <ion-searchbar placeholder=\\\"Cerca\\\" (ionChange)=\\\"searchChange($event)\\\"></ion-searchbar>\\n                <ion-spinner *ngIf=\\\"!hideSpinner\\\"></ion-spinner>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n      </ion-grid>\\n    </div>\\n    <ion-grid *ngIf=\\\"customers && customers.length > 0\\\">\\n      <ion-row>\\n        <ion-col size=\\\"12\\\" size-sm>\\n          <ion-virtual-scroll [items]=\\\"customers\\\">\\n            <ion-item *virtualItem=\\\"let c\\\" lines=\\\"full\\\" approxItemHeight=\\\"57px\\\">\\n              <ion-avatar slot=\\\"start\\\">\\n                <img src=\\\"/api/avatars/{{c.token}}\\\" onerror=\\\"this.src='/customers/assets/images/avatar.jpg';\\\">\\n              </ion-avatar>\\n              <ion-button color=\\\"primary\\\" (click)=\\\"onItemClick(c.token)\\\" slot=\\\"start\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"compass\\\"></ion-icon>\\n              </ion-button>\\n              <ion-note slot=\\\"end\\\" *ngIf=\\\"c && c.address\\\" class=\\\"ion-hide-sm-down\\\">\\n                {{c.address.address}}, {{c.address.city}}, {{c.address.province}}\\n              </ion-note>\\n              <ion-button color=\\\"danger\\\" slot=\\\"end\\\" (click)=\\\"onItemDelete(c.token)\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n              </ion-button>\\n              <ion-label text-wrap>{{c.firstName}} {{c.lastName}}</ion-label>\\n            </ion-item>            \\n          </ion-virtual-scroll>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { AlertController, ToastController } from '@ionic/angular';\nimport { Router} from '@angular/router';\nimport { Customer } from '../models/customer';\nimport { Subscription } from 'rxjs';\nimport { ServiceStatus } from '../models/service-status.enum';\nimport { CustomerService } from '../services/customer.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements OnInit, OnDestroy {\n  @Input() customers: Array<Customer> = [];\n  @Input() searchQuery = '';\n  @Input() hideSpinner = true;\n  query = '';\n\n  baseCustomers: Array<Customer> = [];\n\n  constructor(\n    private router: Router,\n    private cs: CustomerService,\n    private tc: ToastController,\n    private ac: AlertController\n    ) {}\n\n  private async showMessage(message: string) {\n    const toast = await this.tc.create({\n      message,\n      duration: 2000\n    });\n    await toast.present();\n  }\n\n  private getCustomers(): Promise<Array<Customer>> {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      self.cs.asyncGetCustomers().subscribe({\n        next(cstms) {\n          resolve(cstms);\n        },\n        error(err) {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  private async loadData() {\n    try {\n      this.baseCustomers = await this.getCustomers();\n      this.customers = this.baseCustomers;\n    } catch (e) {\n      this.showMessage('Errore caricando i dati. Ricaricare la pagina');\n    }\n  }\n\n  private filterData(query: string): Promise<Array<Customer>> {\n    const self = this;\n    return new Promise ((resolve, reject) => {\n      if (query && query !== '') {\n        try {\n          resolve(this.baseCustomers.filter(obj => {\n            const srep = JSON.stringify(obj);\n            console.log(srep);\n            const regex = new RegExp(`${query}`, 'i');\n            console.log(regex);\n            return regex.test(srep);\n          }));\n        } catch (e) {\n          resolve(this.baseCustomers);\n        }\n      } else {\n        resolve(this.baseCustomers);\n      }\n    });\n  }\n\n  private async searchChange(event) {\n    console.log(event.target.value);\n    this.customers = await this.filterData(event.target.value);\n  }\n\n  private searchClear(event) {\n    console.log(event.target.value);\n  }\n\n  ionViewWillEnter() {\n    this.loadData();\n  }\n\n  ngOnInit() {}\n\n  ngOnDestroy() {}\n\n  onCreateClick() {\n    this.router.navigate(['customer-form', 'new']);\n  }\n\n  onItemClick(token: string) {\n    this.router.navigate(['customer-form', token]);\n  }\n\n  private DeleteItem(token: string): Promise<ServiceStatus> {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      self.cs.asyncDeleteCustomer(token).subscribe({\n        next(ris) {\n          resolve(ris);\n        },\n        error(err) {\n          resolve(ServiceStatus.FAILED);\n        }\n      });\n    });\n  }\n\n  private async ShowMessage(message: string) {\n    const toast = await this.tc.create({\n      message,\n      duration: 2000\n    });\n    await toast.present();\n  }\n\n  private async ConfirmDelete(token: string) {\n    const self = this;\n    const alert = await this.ac.create({\n      header: 'Cancellazione cliente',\n      message: 'Stai per <strong>cancellare</strong> un cliente',\n      buttons: [\n        {\n          text: 'Annulla',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (cnl) => {}\n        },\n        {\n          text: 'Conferma',\n          handler: async () => {\n            try {\n              const ss = await this.DeleteItem(token);\n              if (ss === ServiceStatus.OK) {\n                await self.loadData();\n                await self.ShowMessage('Cliente correttamente cancellato.');\n              } else {\n                await self.ShowMessage('Si è verificato un problema. Riprova!');\n              }\n            } catch (e) {\n              await self.ShowMessage(`Si è verificato un problema ${e}. Riprova!`);\n            }\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async onItemDelete(token: string) {\n    await this.ConfirmDelete(token);\n  }\n}\n"],"sourceRoot":""}